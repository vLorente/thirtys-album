---
import type { Person } from '@/types/people'
import type { HTMLAttributes } from 'astro/types'
import PersonCard from './PersonCard.astro'

interface Props {
	person: Person
	class?: string
	selectedBoxer: Person
	imgLoading?: HTMLAttributes<'img'>['loading']
}

const { person, class: className = '', selectedBoxer, imgLoading } = Astro.props
---

<div class:list={`flex flex-row gap-6 ${className} relative`}>
	<PersonCard id={person.id} name={person.name} class="person-link" />
</div>

<style>
	@reference "../../styles/global.css";

	.person-link {
		@apply relative mb-2 flex flex-col items-center justify-center transition-opacity duration-300 ease-in-out md:size-28 xl:size-36;

		&:hover {
			@apply opacity-90;
		}

		& .person-image {
			@apply z-20 aspect-square h-full w-full object-contain transition-opacity duration-300 ease-in-out;
			mask-image: linear-gradient(to bottom, black 85%, transparent 100%);
			filter: grayscale(100%);
			transition: filter 0.3s ease;
		}
	}

	.person-link-background {
		@apply absolute bottom-0 block h-3/5 w-full opacity-25 transition-opacity duration-300 ease-in-out;
		background: linear-gradient(
			180deg,
			rgba(255, 255, 255, 1) 0%,
			rgba(255, 255, 255, 0.5) 30%,
			rgba(0, 0, 0, 0) 95%
		);
	}

	.person-link:hover .person-image,
	.person-link.active .person-image {
		transition: scale 0.3s ease-in-out;
		scale: 1.05;
		filter: grayscale(0%);
	}

	.person-link.ally {
		& .person-image {
			transition: scale 0.3s ease-in-out;
			scale: 1.05;
		}

		&::after {
			content: 'aliada';
			@apply pointer-events-none absolute bottom-0 z-50 text-2xl text-green-500;
			text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
		}
	}

	.person-link.opponent {
		& .person-image {
			transition: scale 0.3s ease-in-out;
			scale: 1.05;
		}

		&::after {
			content: 'versus';
			@apply pointer-events-none absolute bottom-0 z-50 text-2xl text-red-500;
			text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
		}
	}

	.person-link.active .person-link-background,
	.person-link:hover .person-link-background {
		filter: brightness(0.5);
	}
	.rotate-y-180 {
		transform: rotateY(180deg);
	}
</style>
