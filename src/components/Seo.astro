---
import { SEO } from 'astro-seo'
import { getImage } from 'astro:assets'

import siteData from '@/config/siteData.json'

interface BaseProps {
	title: string
	description: string
	canonical: string
	noindex?: boolean
}

interface GenProps extends BaseProps {
	type: 'general' | undefined
	image?: ImageMetadata
}

const { title, description, noindex, type, image } = Astro.props as GenProps

let optimizedImage
const canonicalUrl = new URL(Astro.url.pathname, Astro.site)

// if this is a blog page we do things differently
if (image) {
	optimizedImage = await getImage({
		src: image,
		format: 'webp',
		quality: 'high',
		width: 1200,
	})
}

function trimEndSlash(str: string) {
	if (str[str.length - 1] === '/') {
		return str.slice(0, -1)
	} else {
		return str
	}
}

// put together the image URL
const imageUrl = trimEndSlash(Astro.site?.toString() || '') + optimizedImage?.src
---

<SEO
	title={title}
	description={description}
	canonical={canonicalUrl.toString()}
	openGraph={{
		basic: {
			title: title,
			type: 'website',
			image: imageUrl,
			url: canonicalUrl.toString(),
		},
		optional: {
			description: description,
			siteName: siteData.title,
		},
		image: {
			type: 'image/webp',
			width: optimizedImage?.attributes.width || '1200',
			height: optimizedImage?.attributes.height || '800',
			alt: title,
		},
	}}
	noindex={noindex}
	nofollow={noindex}
/>
